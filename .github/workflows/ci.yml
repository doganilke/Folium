name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKER_BUILDKIT: 1
  VCPKG_ROOT: /opt/vcpkg

jobs:
  build-test:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - uses: actions/checkout@v4

    - name: Cache vcpkg
      uses: actions/cache@v4
      with:
        path: |
          /opt/vcpkg/downloads
          /opt/vcpkg/buildtrees
          /opt/vcpkg/packages
        key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
        restore-keys: |
          vcpkg-${{ runner.os }}-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true
        driver: docker-container
        driver-opts: network=host


    - name: Build CI Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.ci
        target: test
        tags: folium:ci-${{ github.sha }}  # This is good
        load: true                         # âœ… THIS IS CRUCIAL
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max


    - name: Create artifacts directory
      run: mkdir -p artifacts

    - name: Run tests inside container
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/artifacts:/app/artifacts \
          folium:ci-${{ github.sha }} \
          /bin/bash -c "cd build && ctest --output-on-failure --output-junit /app/artifacts/test-results.xml"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: artifacts/test-results.xml

    - name: Move build cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: build-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true
        driver: docker-container
        driver-opts: network=host

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        target: production
        push: true
        tags: |
          ghcr.io/doganilke/folium:latest
          ghcr.io/doganilke/folium:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: true
        sbom: true

